ifneq (,$(findstring .mk,@arch@))
ARCH = ../makefiles/@arch@
else
ARCH = ../makefiles/@arch@.mk
endif

include $(ARCH)

SOLVERS = @pardiso_dflag@ @mumps_dflag@ @superlu_dflag@ @pexsi_dflag@ @splitsolve_dflag@ @fem_poisson_dflag@
LDFLAGS = $(LFLAGS) $(DFLAGS) $(SOLVERS) 

MAIN = main.cpp
SOURCES_CXX = 
EXCLUDE_C_LIST = @pardiso@ @semi_self_consistent@ 
SOURCES_C = $(filter-out $(EXCLUDE_C_LIST), $(wildcard *.C))
EXCLUDE_c_LIST = @parsers@ 
SOURCES_c = $(filter-out $(EXCLUDE_c_LIST), $(wildcard *.c) @parser_c@)
SOURCES_cu = @splitsolve@
OBJECTS = $(SOURCES_CXX:.cpp=.o) $(SOURCES_C:.C=.o) $(SOURCES_c:.c=.o) $(SOURCES_cu:.cu=.o)
EXECUTABLE = transport

all: $(SOURCES_CXX) $(SOURCES_C) $(SOURCES_c) $(SOURCES_cu) $(EXECUTABLE)

$(EXECUTABLE): $(MAIN:.cpp=.o) $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(INCLUDES) -o $@ $(MAIN:.cpp=.o) $(OBJECTS) $(LDFLAGS) $(LIBS)

%.o: %.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

%.o: %.C
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

%.o: %.cu
	$(NVCC) $(NVCCFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

y.tab.c: parser.y
	$(YACC) -d -b y $<

lex.yy.c: parser.lex y.tab.c
	$(LEX) $<

.PHONY: clean
clean:
	rm -rf *.o lex.yy.c y.tab.c $(EXECUTABLE) 
