ifneq (,$(findstring .mk,@arch@))
ARCH = ../makefiles/@arch@
else
ARCH = ../makefiles/@arch@.mk
endif

include $(ARCH)

INP_DIR = ../inputfiles/files

LDFLAGS = $(LFLAGS) $(DFLAGS)

MAIN = main.cpp
SOURCES_CPP = pole.cpp
EXCLUDE_C_LIST = @pardiso@ 
SOURCES_C = $(shell find . $(shell printf "! -name %s " $(EXCLUDE_C_LIST)) -name "*.C")
SOURCES_c = y.tab.c lex.yy.c
OBJECTS = $(SOURCES_CPP:.cpp=.o) $(SOURCES_C:.C=.o) $(SOURCES_c:.c=.o)
EXECUTABLE = transport

# *********************************************************************
MYMAIN = mymain.cc
MYEXECUTABLE = mymain
SOURCES_CPP_MYMAIN =
EXCLUDE_C_LIST_MYMAIN = @pardiso@ InputParameter.C SemiSelfConsistent.C 
SOURCES_C_MYMAIN = $(shell find . $(shell printf "! -name %s " $(EXCLUDE_C_LIST_MYMAIN)) -name "*.C")
SOURCES_c_MYMAIN =
OBJECTS_MYMAIN = $(SOURCES_CPP_MYMAIN:.cpp=.o) $(SOURCES_C_MYMAIN:.C=.o) $(SOURCES_c_MYMAIN:.c=.o)
# *********************************************************************

all: $(SOURCES_CPP) $(SOURCES_C) $(SOURCES_c) $(EXECUTABLE)

$(EXECUTABLE): $(MAIN:.cpp=.o) $(OBJECTS)
	$(CPP) $(CXXFLAGS) $(INCLUDES) -o $@ $(MAIN:.cpp=.o) $(OBJECTS) @pardiso_so@ $(LDFLAGS) $(LIBS)

.cpp.o:
	$(CPP) $(CXXFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

.cc.o:
	$(CPP) $(CXXFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

.C.o:
	$(CPP) $(CXXFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

.c.o:
	$(GCC) $(CFLAGS) $(INCLUDES) $(LDFLAGS) -c $< -o $@

y.tab.c: parser.y
	$(YACC) -d -b y $<

lex.yy.c: parser.lex y.tab.c
	$(LEX) $<

# *********************************************************************
$(MYEXECUTABLE): $(MYMAIN:.cc=.o) $(OBJECTS_MYMAIN)
	$(CPP) $(CXXFLAGS) $(INCLUDES) -o $@ $(MYMAIN:.cc=.o) $(OBJECTS_MYMAIN) @pardiso_so@ $(LINLIN) $(LDFLAGS) $(LIBS)
# *********************************************************************

.PHONY: clean
clean:
	rm -rf *.o lex.yy.c y.tab.c $(EXECUTABLE) $(MYEXECUTABLE) $(INP_DIR)/*.out csr.*
